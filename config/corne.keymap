/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD0";
            #binding-cells = <0>;
            bindings = <&kp LGUI>, <&mo 1>, <&mo 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | LBRC  |
            // | LCTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '    |
            // | LSHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RSHFT |
            //                    | LEFT_ALT | LWR | TAB |   | MO1 | SPACE  | BACKSPACE |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E         &kp R  &kp T      &kp Y  &kp U      &kp I          &kp O    &kp P     &kp LBRC
&kp LCTRL   &kp A  &kp S  &kp D         &kp F  &kp G      &kp H  &kp J      &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C         &kp V  &kp B      &kp N  &kp M      &kp COMMA      &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LEFT_ALT  &td0   &kp TAB    &mo 1  &kp SPACE  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4     &kp N5       &kp N6         &kp N7    &kp N8    &kp N9     &kp N0     &kp RBRC
&trans  &trans  &trans  &trans  &kp MINUS  &kp PLUS     &kp PG_UP      &kp DOWN  &kp UP    &kp RIGHT  &kp DEL    &kp BSLH
&trans  &trans  &trans  &trans  &trans     &trans       &kp PAGE_DOWN  &kp HOME  &kp DOWN  &kp END    &kp TILDE  &trans
                        &trans  &trans     &kp ENTER    &mo 2          &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
